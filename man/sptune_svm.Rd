% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sptune.R
\name{sptune_svm}
\alias{sptune_svm}
\title{sptune_svm}
\usage{
sptune_svm(formula = NULL, data = NULL, cost = NULL, gamma = NULL,
  accelerate = 1, nfold = NULL, partition_fun = NULL, kernel = NULL,
  type = NULL, error_measure = NULL, svm_fun = "svm", ...)
}
\arguments{
\item{formula}{formula.}

\item{data}{dataframe}

\item{cost}{optional user-defined vector of 'cost' hyperparameter to
tune over. See details.}

\item{gamma}{optional user-defined vector of 'gamma' hyperparameter to
tune over. See details.}

\item{accelerate}{option to speed up tuning using less 'cost' and
'gamma' options. Default to \code{accelerate = 1}.
Increase to reduce number of tuning combinations.}

\item{nfold}{number of folds for cross-validation.}

\item{partition_fun}{character. Data partitioning method
(e.g. \link{partition_kmeans})}

\item{error_measure}{which error measure to use for optimization.
Default to 'RMSE' for numeric responses, 'AUROC' for binary classification
and 'error' for multiclass classiciation.}

\item{svm_fun}{character. Which R svm package to use. See details.}

\item{...}{additional options passed to \code{partition_fun}.}
}
\description{
Tuning of a Support Vector Machine (cost & gamma) using spatial
cross-validation
}
\details{
This function tunes a Support Vector Machine either from \link{e1071}
or \link{kernlab} package using (spatial) cross-validation.

Tuning is performed over the following ranges (\href{https://stats.stackexchange.com/questions/43943/which-search-range-for-determining-svm-optimal-c-and-gamma-parameters}{reference}):
\tabular{rr}{
cost: \tab 2^{-5}, 2^{-3}, ..., 2^{15}\cr
gamma: \tab 2^{-15}, 2^{-13}, ..., 2^{3}
}

\code{error_measure} can be specified by the user, selecting one of the returned
error measures of \link{sptune_svm}. However, note that for
regression type responses always the minimum value of the passed error measure
is chosen and for classification cases the highest.

\code{sptune_svm} is parallelized and runs on all possible cores.
}
\examples{
##------------------------------------------------------------
## binary classification
##------------------------------------------------------------
data(ecuador) # Muenchow et al. (2012), see ?ecuador
fo <- slides ~ dem + slope + hcurv + vcurv + log.carea + cslope

out <- sptune_svm(fo, ecuador, accelerate = 8, nfold = 5,
                  partition_fun = "partition_kmeans", svm_fun = "svm",
                  kernel = "sigmoid", type = "C-classification")

##------------------------------------------------------------
## multiclass classification
##------------------------------------------------------------
fo <- croptype ~ b82 + b83 + b84 + b85 + b86 + b87 + ndvi01 +
      ndvi02 + ndvi03 + ndvi04
data(maipo)
out <- sptune_svm(fo, maipo, accelerate = 8, nfold = 5,
                  coords = c("utmx", "utmy"),
                  partition_fun = "partition_kmeans",
                  svm_fun = "ksvm", type = "C-svc", kernel = "rbfdot")

##------------------------------------------------------------
## regression
##------------------------------------------------------------

data(ecuador) # Muenchow et al. (2012), see ?ecuador
fo <- dem ~ slides + slope + hcurv + vcurv + log.carea + cslope

out <- sptune_svm(fo, ecuador, accelerate = 8, nfold = 5,
                  partition_fun = "partition_kmeans", svm_fun = "svm",
                  kernel = "radial", type = "eps-regression")
}
\seealso{
\link{plot_hyper_svm}
}
\author{
Patrick Schratz, Alexander Brenning
}
