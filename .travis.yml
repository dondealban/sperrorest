language: r
sudo: false
dist: trusty
cache: 
  - packages
  - ccache
latex: false

addons:
  apt:
    sources:
      - sourceline: 'ppa:ubuntugis/ubuntugis-unstable'
    packages:
      - libgdal-dev
      - libudunits2-dev

# These steps apply to all matrix jobs unless defined differently in tic.R
before_install: 
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install ccache && brew tap osgeo/osgeo4mac && brew install gdal2 && brew link --force gdal2; fi
  - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'
install: R -q -e 'tic::install()'
after_install: R -q -e 'tic::after_install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_failure: R -q -e 'tic::after_failure()'

matrix:
  fast_finish: true
  allow_failures:
    - env: NB='w/ lintr'
    - env: NB='w/ covr'
  include:
    - os: linux
      r: oldrel
    - os: linux
      r: release
      before_deploy: R -q -e 'tic::before_deploy()'
      deploy:
          provider: script
          script: R -q -e 'tic::deploy()'
          on:
            all_branches: true
      after_deploy: R -q -e 'tic::after_deploy()'
      after_script: R -q -e 'tic::after_script()'
    - os: linux
      r: devel
    - os: osx
      r: oldrel
    - os: osx
      r: release
    - os: linux
      r: release
      env: NB='w/ covr' ## Just a label
    - os: linux
      r: release
      env: NB='w/ lintr' ## Just a label

notifications:
  slack: giscience-fsu:fIBUkXTIX9Jz70o1gIwiATYE#sperrorest
  on_success: change # default: always
  on_failure: change # default: always
  email: false
